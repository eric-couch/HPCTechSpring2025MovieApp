@page "/admin-dashboard"
@rendermode InteractiveWebAssembly
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Inputs
@using HPCTechSpring2025MovieApp.Shared
@attribute [Authorize(Roles ="Admin")]

<h3>Admin Dashboard</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger" role="alert">
        @ErrorMessage
    </div>
}

@if (Users?.Any() ?? false)
{
    <div class="container-fluid">
        <div class="col">
            <SfGrid     DataSource="Users" 
                        TValue="UserEditDto"
                        Toolbar="@(new List<object>() {
                                            new ItemModel() {
                                                                Text="Add user",
                                                                PrefixIcon = "e-add",
                                                                Id="GridUserAdd"} })"
                        AllowSorting="true">
                    <GridEvents TValue="UserEditDto"
                                RowSelected="GetUserRecordSelected"
                                OnRecordDoubleClick="EditUser"
                                OnToolbarClick="ToolbarClickHandler"></GridEvents>
                <GridColumns>
                    <GridColumn Field="FirstName"></GridColumn>
                    <GridColumn Field="LastName"></GridColumn>
                    <GridColumn Field="Email"></GridColumn>
                    <GridColumn Field="EmailConfirmed">
                        <Template>
                            @{
                                var userEditDto = context as UserEditDto;

                                <span id="EmailConfirmed">
                                    <SfCheckBox @bind-Checked="userEditDto.EmailConfirmed" TChecked="bool"
                                                @onchange="eventArgs => { ToggleEmailConfirmed(eventArgs, userEditDto.Id); }">
                                                </SfCheckBox>
                                </span>
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn Field="Admin">
                        <Template>
                            @{
                                var userEditDto = context as UserEditDto;

                                <span id="IsAdmin">
                                    <SfCheckBox @bind-Checked="userEditDto.Admin" TChecked="bool"
                                                @onchange="eventArgs => { ToggleAdmin(eventArgs, userEditDto.Id); }">
                                    </SfCheckBox>
                                </span>
                            }
                        </Template>
                    </GridColumn>
                </GridColumns>
            </SfGrid>
        </div>
    </div>
}

<SfDialog Width="800px" Height="500px" IsModal="true" @bind-Visible="@IsUserModalVisible">
    <DialogTemplates>
        <Header>Add/Edit User</Header>
        <Content>
            <EditForm Model="SelectedUser" @ref="editForm" OnValidSubmit="AddUserOnSubmit">
                <DataAnnotationsValidator />
                
                <div class="form-group row">
                    <div class="col-md-12">
                        <label for="firstName">First Name</label>
                        <SfTextBox  ID="firstName" 
                                    Placeholder="First Name"
                                    @bind-Value="@SelectedUser.FirstName"></SfTextBox>
                        <ValidationMessage For="@(() => SelectedUser.FirstName)" />
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-12">
                        <label for="lastName">Last Name</label>
                        <SfTextBox ID="lastName"
                                   Placeholder="Last Name"
                                   @bind-Value="@SelectedUser.LastName"></SfTextBox>
                        <ValidationMessage For="@(() => SelectedUser.LastName)" />
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-12">
                        <label for="Email">Email</label>
                        <SfTextBox ID="Email"
                                   Placeholder="Email"
                                   @bind-Value="@SelectedUser.Email"></SfTextBox>
                        <ValidationMessage For="@(() => SelectedUser.Email)" />
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-12">
                        <label for="emailConfirmed">Email Confirmed</label>
                        <SfCheckBox @bind-Checked="@SelectedUser.EmailConfirmed"></SfCheckBox>
                        <ValidationMessage For="@(() => SelectedUser.EmailConfirmed)" />
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-12">
                        <label for="admin">Admin</label>
                        <SfCheckBox @bind-Checked="@SelectedUser.Admin"></SfCheckBox>
                        <ValidationMessage For="@(() => SelectedUser.Admin)" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 text-right pt-5">
                        <SfButton IsPrimary="true" Type="button" title="Cancel" 
                                  OnClick="@(() => {Reset();})">Cancel</SfButton>
                        <SfButton IsPrimary="true" typeof="submit" title="Submit">Update/Add User</SfButton>
                    </div>
                </div>
            </EditForm>
        </Content>
    </DialogTemplates>
</SfDialog>